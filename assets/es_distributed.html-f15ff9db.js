import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as n,e as h,a as e,b as t,d,f as a}from"./app-b4594200.js";const i="/assets/frame/es-cluster.png",l={},p=e("h1",{id:"es-分布式存储原理",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#es-分布式存储原理","aria-hidden":"true"},"#"),t(" ES 分布式存储原理")],-1),_=e("p",null,[t("介绍ES的分布式架构原理，包括"),e("strong",null,"ES存储结构和ES分布式框架设计")],-1),u={href:"https://github.com/doocs/advanced-java/blob/main/docs/high-concurrency/es-architecture.md",target:"_blank",rel:"noopener noreferrer"},m=a('<h2 id="_1-es-存储结构" tabindex="-1"><a class="header-anchor" href="#_1-es-存储结构" aria-hidden="true">#</a> 1. ES 存储结构</h2><p>ES集群是在多个机器上启动ES进程组成的集群。</p><h3 id="_1-1-es-索引分区" tabindex="-1"><a class="header-anchor" href="#_1-1-es-索引分区" aria-hidden="true">#</a> 1.1 ES 索引分区</h3><p>ES 中<strong>存储数据的基本单位是索引（index）</strong>，比如说你现在要在 ES 中存储一些订单数据，你就应该在 ES 中创建一个索引 order_idx ，所有的订单数据就都写到这个索引里面去，一个索引差不多就是相当于是 mysql 里的一个数据库。</p><p>ES 的索引分为五个层级</p><ul><li>Index -&gt; Type -&gt; Mapping -&gt; document -&gt; field</li></ul><p>下面是ES和MySQL的类比表格</p><table><thead><tr><th>ES</th><th>MySQL</th><th>ES 概念理解</th></tr></thead><tbody><tr><td>Index</td><td>schema</td><td>索引是一组具有相似特征的文档的集合。</td></tr><tr><td>Type</td><td>Table</td><td>类型是索引中文档的逻辑分组。例如，对于博客文章索引，可以将文章文档分为“技术”、“旅游”等不同的类型。</td></tr><tr><td>Mapping</td><td>表结构</td><td>映射定义了索引中每个字段的类型和属性。例如，对于标题字段，可以定义其类型为“文本”，并指定分词器等属性</td></tr><tr><td>document</td><td>data</td><td>文档是Elasticsearch中最基本的数据单元。每个文档都是一个JSON对象，包含一组键值对，代表一条记录。相当于关系型数据库中的行</td></tr><tr><td>field</td><td>field</td><td>字段是文档中的数据项。例如，在博客文章文档中，标题、正文和作者等都是字段。</td></tr></tbody></table>',8),E={href:"https://blog.51cto.com/u_16099361/6480958",target:"_blank",rel:"noopener noreferrer"},S=a('<h3 id="_1-2-es-shard分区" tabindex="-1"><a class="header-anchor" href="#_1-2-es-shard分区" aria-hidden="true">#</a> 1.2 ES shard分区</h3><ul><li><strong>支持横向拓展</strong>：一个索引可以拆分成多个 shard ，每个 shard 存储部分数据</li></ul><blockquote><p>比如你数据量是 3T，3 个 shard，每个 shard 就 1T 的数据，若现在数据量增加到 4T，怎么扩展，很简单，重新建一个有 4 个 shard 的索引，将数据导进</p></blockquote><ul><li><p><strong>增强吞吐能力</strong>：多台机器上并行分布式执行，提高了吞吐量和性能。</p></li><li><p><strong>提高读写能力</strong>： <code>primary shard</code> 进行读、写；<code>replica shard</code> 进行读。<code>primary shard</code>写完后，会同步到其他<code>replica shard</code>上。</p></li></ul><h2 id="_2-es-框架设计" tabindex="-1"><a class="header-anchor" href="#_2-es-框架设计" aria-hidden="true">#</a> 2. ES 框架设计</h2><p><img src="'+i+'" alt="ES 框架图" loading="lazy"><br> 每个ES集群都会有一个master节点<br> master 节点的职责：维护索引元数据、负责切换 primary shard 和 replica shard 身份，即节点上的<code>primary shard</code>挂了，其他<code>replica shard</code>替换；<code>replica shard </code>挂了，master 节点会控制将缺失的 <code>replica shard </code>分配过去。</p><p>以上是最基本的ES分布式引擎的框架设计。</p>',7);function b(g,f){const r=o("ExternalLinkIcon");return c(),n("div",null,[p,_,h(" more "),e("blockquote",null,[e("p",null,[t("参考："),e("a",u,[t("ES 的分布式架构原理能说一下么（ES 是如何实现分布式的啊）？"),d(r)])])]),m,e("p",null,[e("a",E,[t("ES具体概念理解"),d(r)])]),S])}const k=s(l,[["render",b],["__file","es_distributed.html.vue"]]);export{k as default};
